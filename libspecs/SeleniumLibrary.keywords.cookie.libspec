<?xml version="1.0" encoding="UTF-8"?>
<keywordspec name="SeleniumLibrary.keywords.cookie" type="LIBRARY" format="ROBOT" scope="GLOBAL" namedargs="true" generated="2020-06-29T06:32:56Z" specversion="2" source="..\..\Program Files (x86)\Python\lib\site-packages\SeleniumLibrary\keywords\cookie.py" lineno="1">
<version></version>
<scope>global</scope>
<namedargs>yes</namedargs>
<doc>Documentation for library ``SeleniumLibrary.keywords.cookie``.</doc>
<kw name="Convert Date" source="..\..\Program Files (x86)\Python\lib\site-packages\robot\libraries\DateTime.py" lineno="359">
<arguments>
<arg>date</arg>
<arg>result_format=timestamp</arg>
<arg>exclude_millis=False</arg>
<arg>date_format=None</arg>
</arguments>
<doc>Converts between supported `date formats`.

Arguments:
- ``date:``           Date in one of the supported `date formats`.
- ``result_format:``  Format of the returned date.
- ``exclude_millis:`` When set to any true value, rounds and drops
                      milliseconds as explained in `millisecond handling`.
- ``date_format:``    Specifies possible `custom timestamp` format.

Examples:
| ${date} =       | Convert Date | 20140528 12:05:03.111   |
| Should Be Equal | ${date}      | 2014-05-28 12:05:03.111 |
| ${date} =       | Convert Date | ${date}                 | epoch |
| Should Be Equal | ${date}      | ${1401267903.111}       |
| ${date} =       | Convert Date | 5.28.2014 12:05         | exclude_millis=yes | date_format=%m.%d.%Y %H:%M |
| Should Be Equal | ${date}      | 2014-05-28 12:05:00     |</doc>
</kw>
<kw name="Is Falsy" source="..\..\Program Files (x86)\Python\lib\site-packages\robot\utils\robottypes.py" lineno="57">
<arguments>
<arg>item</arg>
</arguments>
<doc>Opposite of :func:`is_truthy`.</doc>
</kw>
<kw name="Is Noney" source="..\..\Program Files (x86)\Python\lib\site-packages\SeleniumLibrary\utils\types.py" lineno="26">
<arguments>
<arg>item</arg>
</arguments>
<doc></doc>
</kw>
<kw name="Is Truthy" source="..\..\Program Files (x86)\Python\lib\site-packages\robot\utils\robottypes.py" lineno="36">
<arguments>
<arg>item</arg>
</arguments>
<doc>Returns `True` or `False` depending is the item considered true or not.

Validation rules:

- If the value is a string, it is considered false if it is `'FALSE'`,
  `'NO'`, `'OFF'`, `'0'`, `'NONE'` or `''`, case-insensitively.
  Considering `'NONE'` false is new in RF 3.0.3 and considering `'OFF'`
  and `'0'` false is new in RF 3.1.
- Other strings are considered true.
- Other values are handled by using the standard `bool()` function.

Designed to be used also by external test libraries that want to handle
Boolean values similarly as Robot Framework itself. See also
:func:`is_falsy`.</doc>
</kw>
</keywordspec>
